@use '../../../styles/variables' as *;

.select {
  position: relative;
}

.label {
  display: block;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  color: $text-700;
  margin-bottom: $spacing-2;
}

.trigger {
  position: relative;
  width: 100%;
  padding: $spacing-2 $spacing-3;
  text-align: left;
  background-color: $white;
  border: 1px solid $gray-300;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-sm;
  cursor: pointer;
  transition: all $transition-base;
  
  &:hover:not(:disabled) {
    border-color: $gray-400;
  }
  
  &:focus {
    outline: none;
    border-color: $primary;
    box-shadow: 0 0 0 2px rgba($primary, 0.5);
  }
  
  &:disabled {
    background-color: $gray-50;
    color: $gray-500;
    cursor: not-allowed;
  }
  
  &.error {
    border-color: $error;
    
    &:focus {
      border-color: $error;
      box-shadow: 0 0 0 2px rgba($error, 0.5);
    }
  }
  
  &.open {
    border-color: $primary;
    box-shadow: 0 0 0 2px rgba($primary, 0.5);
  }
}

.triggerContent {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.triggerText {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  
  &.placeholder {
    color: $gray-400;
  }
}

.chevron {
  width: 1.25rem;
  height: 1.25rem;
  color: $gray-400;
  transition: transform $transition-base;
  flex-shrink: 0;
  
  &.open {
    transform: rotate(180deg);
  }
}

.dropdown {
  position: absolute;
  z-index: $z-dropdown;
  width: 100%;
  margin-top: $spacing-1;
  background-color: $white;
  border: 1px solid $gray-200;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-lg;
  max-height: 15rem;
  overflow-y: auto;
  animation: slideDownAndFade $transition-base ease-out forwards;
  
  &::-webkit-scrollbar {
    width: 6px;
  }
  
  &::-webkit-scrollbar-track {
    background: transparent;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $gray-300;
    border-radius: 3px;
    
    &:hover {
      background: $gray-400;
    }
  }
}

.groupLabel {
  padding: $spacing-2 $spacing-3;
  font-size: $font-size-xs;
  font-weight: $font-weight-semibold;
  color: $gray-500;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  background-color: $gray-50;
  border-bottom: 1px solid $gray-100;
}

.option {
  width: 100%;
  text-align: left;
  padding: $spacing-2 $spacing-3;
  font-size: $font-size-sm;
  transition: all $transition-base;
  border: none;
  background: none;
  cursor: pointer;
  position: relative;
  
  &:hover:not(:disabled) {
    background-color: $primary-200;
    color: $text-800;
  }
  
  &:focus {
    outline: none;
    background-color: $primary-200;
    color: $text-800;
  }
  
  &.highlighted {
    background-color: $primary-200;
    color: $text-800;
  }
  
  &.selected {
    background-color: $primary-300;
    color: $text-800;
    font-weight: $font-weight-medium;
  }
}

.optionContent {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.optionInfo {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.optionLabel {
  // 기본 스타일은 부모에서 상속
}

.optionPreview {
  font-size: $font-size-xs;
  color: inherit;
  margin-top: $spacing-1;
  opacity: 0.8;
}

.checkIcon {
  width: 1rem;
  height: 1rem;
  color: inherit;
  flex-shrink: 0;
}

.emptyMessage {
  padding: $spacing-2 $spacing-3;
  font-size: $font-size-sm;
  color: $gray-500;
  text-align: center;
}

.errorMessage {
  margin-top: $spacing-1;
  font-size: $font-size-sm;
  color: $error;
}

@keyframes slideDownAndFade {
  from {
    opacity: 0;
    transform: translateY(-4px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}